/// Representation of effects. Not sure what they are...
/// TODO: Find out what these values can be.
pub struct EffectOrPowerId(u32);

impl wasm_bindgen::convert::IntoWasmAbi for EffectOrPowerId {
    type Abi = u32;

    #[inline]
    fn into_abi(self) -> Self::Abi {
        match self {
            EffectOrPowerId(v) => v.into_abi()
        }
    }
}

impl wasm_bindgen::convert::FromWasmAbi for EffectOrPowerId {
    type Abi = u32;

    #[inline]
    unsafe fn from_abi(js: u32) -> Self {
        EffectOrPowerId(js)
    }
}

impl wasm_bindgen::describe::WasmDescribe for EffectOrPowerId {
    fn describe() {
        wasm_bindgen::describe::inform(wasm_bindgen::describe::U32)
    }
}

pub enum ResourceType {
    Energy,
    Power,
    Hydrogen,
    Oxygen,
    Utrium,
    Lemergium,
    Keanium,
    Zynthium,
    Catalyst,
    Ghodium,
    Silicon,
    Metal,
    Biomass,
    Mist,
    Hydroxide,
    ZynthiumKeanite,
    UtriumLemergite,
    UtriumHydride,
    UtriumOxide,
    KeaniumHydride,
    KeaniumOxide,
    LemergiumHydride,
    LemergiumOxide,
    ZynthiumHydride,
    ZynthiumOxide,
    GhodiumHydride,
    GhodiumOxide,
    UtriumAcid,
    UtriumAlkalide,
    KeaniumAcid,
    KeaniumAlkalide,
    LemergiumAcid,
    LemergiumAlkalide,
    ZynthiumAcid,
    ZynthiumAlkalide,
    GhodiumAcid,
    GhodiumAlkalide,
    CatalyzedUtriumAcid,
    CatalyzedUtriumAlkalide,
    CatalyzedKeaniumAcid,
    CatalyzedKeaniumAlkalide,
    CatalyzedLemergiumAcid,
    CatalyzedLemergiumAlkalide,
    CatalyzedZynthiumAcid,
    CatalyzedZynthiumAlkalide,
    CatalyzedGhodiumAcid,
    CatalyzedGhodiumAlkalide,
    Ops,
    UtriumBar,
    LemergiumBar,
    ZynthiumBar,
    KeaniumBar,
    GhodiumMelt,
    Oxidant,
    Reductant,
    Purifier,
    Battery,
    Composite,
    Crystal,
    Liquid,
    Wire,
    Switch,
    Transistor,
    Microchip,
    Circuit,
    Device,
    Cell,
    Phlegm,
    Tissue,
    Muscle,
    Organoid,
    Organism,
    Alloy,
    Tube,
    Fixtures,
    Frame,
    Hydraulics,
    Machine,
    Condensate,
    Concentrate,
    Extract,
    Spirit,
    Emanation,
    Essence,
}

impl wasm_bindgen::convert::IntoWasmAbi for ResourceType {
    type Abi = <String as wasm_bindgen::convert::IntoWasmAbi>::Abi;

    #[inline]
    fn into_abi(self) -> Self::Abi {
        let v = match self {
            ResourceType::Energy => "energy",
            ResourceType::Power => "power",
            ResourceType::Hydrogen => "H",
            ResourceType::Oxygen => "O",
            ResourceType::Utrium => "U",
            ResourceType::Lemergium => "L",
            ResourceType::Keanium => "K",
            ResourceType::Zynthium => "Z",
            ResourceType::Catalyst => "X",
            ResourceType::Ghodium => "G",
            ResourceType::Silicon => "silicon",
            ResourceType::Metal => "metal",
            ResourceType::Biomass => "biomass",
            ResourceType::Mist => "mist",
            ResourceType::Hydroxide => "OH",
            ResourceType::ZynthiumKeanite => "ZK",
            ResourceType::UtriumLemergite => "UL",
            ResourceType::UtriumHydride => "UH",
            ResourceType::UtriumOxide => "UO",
            ResourceType::KeaniumHydride => "KH",
            ResourceType::KeaniumOxide => "KO",
            ResourceType::LemergiumHydride => "LH",
            ResourceType::LemergiumOxide => "LO",
            ResourceType::ZynthiumHydride => "ZH",
            ResourceType::ZynthiumOxide => "ZO",
            ResourceType::GhodiumHydride => "GH",
            ResourceType::GhodiumOxide => "GO",
            ResourceType::UtriumAcid => "UH2O",
            ResourceType::UtriumAlkalide => "UHO2",
            ResourceType::KeaniumAcid => "KH2O",
            ResourceType::KeaniumAlkalide => "KHO2",
            ResourceType::LemergiumAcid => "LH2O",
            ResourceType::LemergiumAlkalide => "LHO2",
            ResourceType::ZynthiumAcid => "ZH2O",
            ResourceType::ZynthiumAlkalide => "ZHO2",
            ResourceType::GhodiumAcid => "GH2O",
            ResourceType::GhodiumAlkalide => "GHO2",
            ResourceType::CatalyzedUtriumAcid => "XUH2O",
            ResourceType::CatalyzedUtriumAlkalide => "XUHO2",
            ResourceType::CatalyzedKeaniumAcid => "XKH2O",
            ResourceType::CatalyzedKeaniumAlkalide => "XKHO2",
            ResourceType::CatalyzedLemergiumAcid => "XLH2O",
            ResourceType::CatalyzedLemergiumAlkalide => "XLHO2",
            ResourceType::CatalyzedZynthiumAcid => "XZH2O",
            ResourceType::CatalyzedZynthiumAlkalide => "XZHO2",
            ResourceType::CatalyzedGhodiumAcid => "XGH2O",
            ResourceType::CatalyzedGhodiumAlkalide => "XGHO2",
            ResourceType::Ops => "ops",
            ResourceType::UtriumBar => "utrium_bar",
            ResourceType::LemergiumBar => "lemergium_bar",
            ResourceType::ZynthiumBar => "zynthium_bar",
            ResourceType::KeaniumBar => "keanium_bar",
            ResourceType::GhodiumMelt => "ghodium_melt",
            ResourceType::Oxidant => "oxidant",
            ResourceType::Reductant => "reductant",
            ResourceType::Purifier => "purifier",
            ResourceType::Battery => "battery",
            ResourceType::Composite => "composite",
            ResourceType::Crystal => "crystal",
            ResourceType::Liquid => "liquid",
            ResourceType::Wire => "wire",
            ResourceType::Switch => "switch",
            ResourceType::Transistor => "transistor",
            ResourceType::Microchip => "microchip",
            ResourceType::Circuit => "circuit",
            ResourceType::Device => "device",
            ResourceType::Cell => "cell",
            ResourceType::Phlegm => "phlegm",
            ResourceType::Tissue => "tissue",
            ResourceType::Muscle => "muscle",
            ResourceType::Organoid => "organoid",
            ResourceType::Organism => "organism",
            ResourceType::Alloy => "alloy",
            ResourceType::Tube => "tube",
            ResourceType::Fixtures => "fixtures",
            ResourceType::Frame => "frame",
            ResourceType::Hydraulics => "hydraulics",
            ResourceType::Machine => "machine",
            ResourceType::Condensate => "condensate",
            ResourceType::Concentrate => "concentrate",
            ResourceType::Extract => "extract",
            ResourceType::Spirit => "spirit",
            ResourceType::Emanation => "emanation",
            ResourceType::Essence => "essence",
        };
        v.into_abi()
    }
}

impl wasm_bindgen::convert::FromWasmAbi for ResourceType {
    type Abi = <String as wasm_bindgen::convert::FromWasmAbi>::Abi;

    #[inline]
    unsafe fn from_abi(js_str: Self::Abi) -> Self {
        match String::from_abi(js_str).as_str() {
            "energy" => ResourceType::Energy,
            "power" => ResourceType::Power,
            "H" => ResourceType::Hydrogen,
            "O" => ResourceType::Oxygen,
            "U" => ResourceType::Utrium,
            "L" => ResourceType::Lemergium,
            "K" => ResourceType::Keanium,
            "Z" => ResourceType::Zynthium,
            "X" => ResourceType::Catalyst,
            "G" => ResourceType::Ghodium,
            "silicon" => ResourceType::Silicon,
            "metal" => ResourceType::Metal,
            "biomass" => ResourceType::Biomass,
            "mist" => ResourceType::Mist,
            "OH" => ResourceType::Hydroxide,
            "ZK" => ResourceType::ZynthiumKeanite,
            "UL" => ResourceType::UtriumLemergite,
            "UH" => ResourceType::UtriumHydride,
            "UO" => ResourceType::UtriumOxide,
            "KH" => ResourceType::KeaniumHydride,
            "KO" => ResourceType::KeaniumOxide,
            "LH" => ResourceType::LemergiumHydride,
            "LO" => ResourceType::LemergiumOxide,
            "ZH" => ResourceType::ZynthiumHydride,
            "ZO" => ResourceType::ZynthiumOxide,
            "GH" => ResourceType::GhodiumHydride,
            "GO" => ResourceType::GhodiumOxide,
            "UH2O" => ResourceType::UtriumAcid,
            "UHO2" => ResourceType::UtriumAlkalide,
            "KH2O" => ResourceType::KeaniumAcid,
            "KHO2" => ResourceType::KeaniumAlkalide,
            "LH2O" => ResourceType::LemergiumAcid,
            "LHO2" => ResourceType::LemergiumAlkalide,
            "ZH2O" => ResourceType::ZynthiumAcid,
            "ZHO2" => ResourceType::ZynthiumAlkalide,
            "GH2O" => ResourceType::GhodiumAcid,
            "GHO2" => ResourceType::GhodiumAlkalide,
            "XUH2O" => ResourceType::CatalyzedUtriumAcid,
            "XUHO2" => ResourceType::CatalyzedUtriumAlkalide,
            "XKH2O" => ResourceType::CatalyzedKeaniumAcid,
            "XKHO2" => ResourceType::CatalyzedKeaniumAlkalide,
            "XLH2O" => ResourceType::CatalyzedLemergiumAcid,
            "XLHO2" => ResourceType::CatalyzedLemergiumAlkalide,
            "XZH2O" => ResourceType::CatalyzedZynthiumAcid,
            "XZHO2" => ResourceType::CatalyzedZynthiumAlkalide,
            "XGH2O" => ResourceType::CatalyzedGhodiumAcid,
            "XGHO2" => ResourceType::CatalyzedGhodiumAlkalide,
            "ops" => ResourceType::Ops,
            "utrium_bar" => ResourceType::UtriumBar,
            "lemergium_bar" => ResourceType::LemergiumBar,
            "zynthium_bar" => ResourceType::ZynthiumBar,
            "keanium_bar" => ResourceType::KeaniumBar,
            "ghodium_melt" => ResourceType::GhodiumMelt,
            "oxidant" => ResourceType::Oxidant,
            "reductant" => ResourceType::Reductant,
            "purifier" => ResourceType::Purifier,
            "battery" => ResourceType::Battery,
            "composite" => ResourceType::Composite,
            "crystal" => ResourceType::Crystal,
            "liquid" => ResourceType::Liquid,
            "wire" => ResourceType::Wire,
            "switch" => ResourceType::Switch,
            "transistor" => ResourceType::Transistor,
            "microchip" => ResourceType::Microchip,
            "circuit" => ResourceType::Circuit,
            "device" => ResourceType::Device,
            "cell" => ResourceType::Cell,
            "phlegm" => ResourceType::Phlegm,
            "tissue" => ResourceType::Tissue,
            "muscle" => ResourceType::Muscle,
            "organoid" => ResourceType::Organoid,
            "organism" => ResourceType::Organism,
            "alloy" => ResourceType::Alloy,
            "tube" => ResourceType::Tube,
            "fixtures" => ResourceType::Fixtures,
            "frame" => ResourceType::Frame,
            "hydraulics" => ResourceType::Hydraulics,
            "machine" => ResourceType::Machine,
            "condensate" => ResourceType::Condensate,
            "concentrate" => ResourceType::Concentrate,
            "extract" => ResourceType::Extract,
            "spirit" => ResourceType::Spirit,
            "emanation" => ResourceType::Emanation,
            "essence" => ResourceType::Essence,
            v => panic!("unknown creep body part: {}", v)
        }
    }
}

impl wasm_bindgen::describe::WasmDescribe for ResourceType {
    fn describe() {
        String::describe()
    }
}
